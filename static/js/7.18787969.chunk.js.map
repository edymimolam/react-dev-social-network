{"version":3,"sources":["components/Login/Login.module.css","components/common/Forms/Fields.jsx","utils/validation.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Login/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","max","min","Input","input","meta","touched","error","warning","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","styleName","style","inputDiv","required","value","undefined","minLength2","email","test","reduxForm","form","handleSubmit","submitting","onSubmit","className","Field","name","component","type","placeholder","validate","checkbox","disabled","connect","state","isAuth","auth","isAuthorized","dispatch","logIn","password","rememberMe","login","to","container"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,0B,uGCEtF,ICDWC,EAIAC,EDHLC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,KAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,QAAcC,EEFtD,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,OAAAC,EAAA,GAA6BL,EAAQC,GAGlD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GAEpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EFdY,4BACnB,yBAAKU,UAAWC,IAAMC,UACpB,2CAAWtB,EAAWK,IACrBH,IACGC,GAAS,8BAAOA,IACfC,GAAW,8BAAOA,MCRdmB,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,YAQtEC,GANK7B,EAEmB,GAEnBC,EAEkB,EAFX,SAAA0B,GAAK,OAC5BA,GAASA,EAAMT,OAASjB,EAAxB,kBAAyCA,EAAzC,4BAAoE2B,IAGzDE,EAAQ,SAAAH,GAAK,OACxBA,IAAU,4CAA4CI,KAAKJ,GACvD,6BACAC,GEsBSI,cAAU,CAAEC,KAAM,SAAlBD,EA7BG,SAAC,GAAyC,IAAvC1B,EAAsC,EAAtCA,MAAO4B,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAExC,OAAO,0BAAMC,SAAUF,EAAcG,UAAWb,IAAMS,MAEpD,kBAACK,EAAA,EAAD,CACEC,KAAK,QACLC,UAAWtC,EACXuC,KAAK,OACLC,YAAY,QACZC,SAAU,CAACjB,EAAUI,KAGvB,kBAACQ,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWtC,EACXuC,KAAK,WACLC,YAAY,WACZC,SAAU,CAACjB,EAAUG,KAGvB,kBAACS,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWtC,EAAOuC,KAAK,WAAWJ,UAAWb,IAAMoB,WAE3EtC,GAAS,6BAAK,gCAASA,IAExB,4BAAQmC,KAAK,SAASI,SAAUV,GAAhC,c,wBCLWW,uBAHS,SAACC,GAAD,MAAY,CAAEC,OAAQD,EAAME,KAAKC,iBAJ9B,SAACC,GAAD,MAAe,CACxCC,MAAO,SAACtB,EAAOuB,EAAUC,GAAiBH,EAASI,YAAMzB,EAAOuB,EAAUC,QAM7DR,EAjBD,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,OAAQI,EAAY,EAAZA,MAEvB,OAAIJ,EAAe,kBAAC,IAAD,CAAUQ,GAAG,aAEzB,yBAAKnB,UAAWb,IAAMiC,WAC3B,qCACA,kBAAC,EAAD,CAAWrB,SAAU,gBAAGN,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAApB,OAAqCF,EAAMtB,EAAOuB,EAAUC","file":"static/js/7.18787969.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1Oz4Y\",\"form\":\"Login_form__2mvFD\",\"checkbox\":\"Login_checkbox__3UFrU\"};","import React from 'react'\nimport style from '../../Login/Login.module.css'\n\nexport const Input = ({ input, meta: { touched, error, warning }, ...props }) => (\n  <div styleName={style.inputDiv}>\n    <input {...input} {...props} />\n    {touched &&\n      ((error && <span>{error}</span>) ||\n        (warning && <span>{warning}</span>))}\n  </div>\n)\n","export const required = value => (value || typeof value === 'number' ? undefined : 'Required')\n\nconst maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength15 = maxLength(15)\n\nconst minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength2 = minLength(2)\n\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport style from './Login.module.css'\nimport { Field, reduxForm } from 'redux-form'\nimport { Input } from '../common/Forms/Fields'\nimport { required, email, minLength2 } from '../../utils/validation'\n\nconst LoginForm = ({ error, handleSubmit, submitting }) => {\n  \n  return <form onSubmit={handleSubmit} className={style.form}>\n\n    <Field\n      name=\"email\"\n      component={Input}\n      type=\"text\"\n      placeholder=\"Email\"\n      validate={[required, email]}\n    />\n\n    <Field\n      name=\"password\"\n      component={Input}\n      type=\"password\"\n      placeholder=\"Password\"\n      validate={[required, minLength2]}\n    />\n\n    <Field name=\"rememberMe\" component={Input} type=\"checkbox\" className={style.checkbox} />\n\n    {error && <div><strong>{error}</strong></div>}\n\n    <button type=\"submit\" disabled={submitting}>Submit</button>\n\n  </form>\n}\n\nexport default reduxForm({ form: 'login' })(LoginForm)","import React from 'react'\nimport style from './Login.module.css'\nimport LoginForm from './LoginForm'\nimport { connect } from 'react-redux'\nimport { login } from '../../redux/authReducer'\nimport { Redirect } from 'react-router-dom'\n\n\nconst Login = ({ isAuth, logIn }) => {\n\n  if (isAuth) return <Redirect to='/profile' />\n\n  return <div className={style.container}>\n    <h1>Login</h1>\n    <LoginForm onSubmit={({ email, password, rememberMe }) => logIn(email, password, rememberMe)} />\n  </div>\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  logIn: (email, password, rememberMe) => { dispatch(login(email, password, rememberMe)) }\n})\n\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuthorized })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"],"sourceRoot":""}