{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","id","name","className","s","dialog","active","to","Message","message","reduxForm","form","props","handleSubmit","onSubmit","Field","component","type","Dialogs","dialogsPage","dialogs","messages","addNewMessage","dialogsItems","map","d","key","m","newMessageText","mapStateToProps","state","isAuth","auth","isAuthorized","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCSnKC,EANI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACxB,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACxC,kBAAC,IAAD,CAASC,GAAE,mBAAcN,IAAOC,KCCrBM,EAJC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAO,yBAAKN,UAAWC,IAAEC,QAASI,I,kBCUrBC,cAAU,CAACC,KAAM,cAAjBD,EAXQ,SAAAE,GAAU,IACxBC,EAAgBD,EAAhBC,aACP,OAAO,0BAAMC,SAAUD,GAErB,kBAACE,EAAA,EAAD,CAAOb,KAAK,iBAAgBc,UAAU,aAEtC,4BAAQC,KAAK,UAAb,eCcWC,EAjBC,SAAC,GAA2D,IAAD,IAAxDC,YAAeC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,SAAYC,EAAoB,EAApBA,cAErD,OAAO,yBAAKnB,UAAWC,IAAEgB,SAEvB,yBAAKjB,UAAWC,IAAEmB,cACfH,EAAQI,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMD,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,SAG/D,yBAAKE,UAAWC,IAAEiB,UACfA,EAASG,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAASlB,QAASkB,EAAElB,QAASiB,IAAKC,EAAE1B,SAGzD,kBAAC,EAAD,CAAgBa,SAAU,gBAAGc,EAAH,EAAGA,eAAH,OAAwBN,EAAcM,Q,gECdhEC,EAAkB,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKC,eAcvCC,EAZU,SAACC,GAAe,IAEjCC,EAFgC,iLAIlC,OAAIC,KAAKzB,MAAMmB,OACR,kBAACI,EAAcE,KAAKzB,OADG,kBAAC,IAAD,CAAUL,GAAG,eAJT,GAEN+B,IAAMH,WAOtC,OAAOI,YAAQV,EAARU,CAAyBH,I,QCLnBI,sBAAQD,aAHC,SAACT,GAAD,MAAY,CAACX,YAAaW,EAAMX,eAGR,CAACG,oBAAiBY,EAAnDM,CAAqEtB","file":"static/js/6.3f4c9d1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = ({ id, name }) => {\r\n  return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={`/dialogs/${id}`}>{name}</NavLink>\r\n  </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={s.dialog}>{message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nconst NewMessageForm = props => {\n  const {handleSubmit} = props\n  return <form onSubmit={handleSubmit} >\n\n    <Field name='newMessageText'component='textarea'/>\n    \n    <button type='submit'>Push me</button>\n\n  </form>\n}\n\nexport default reduxForm({form: 'newMessage'})(NewMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessageForm from './NewMessageForm/NewMessageForm'\r\n\r\nconst Dialogs = ({ dialogsPage: { dialogs, messages }, addNewMessage }) => {\r\n\r\n  return <div className={s.dialogs}>\r\n\r\n    <div className={s.dialogsItems}>\r\n      {dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)}\r\n    </div>\r\n\r\n    <div className={s.messages}>\r\n      {messages.map(m => <Message message={m.message} key={m.id} />)}\r\n    </div>\r\n\r\n    <NewMessageForm onSubmit={({ newMessageText }) => addNewMessage(newMessageText)} />\r\n\r\n  </div>\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nlet mapStateToProps = (state) => ({isAuth: state.auth.isAuthorized})\n\nconst withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render(){\n      if(!this.props.isAuth) return <Redirect to='/login'/>\n      return <Component {...this.props}/>\n    }\n  }\n\n  return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport default withAuthRedirect","import React from 'react';\nimport Dialogs from \"./Dialogs\"\nimport {addNewMessage} from '../../redux/dialogsReducer'\nimport {connect} from 'react-redux'\nimport withAuthRedirect  from '../../hoc/withAuthRedirect'\nimport {compose} from 'redux'\n\nconst mapStateToProps = (state) => ({dialogsPage: state.dialogsPage})\n\n\nexport default compose(connect(mapStateToProps, {addNewMessage}), withAuthRedirect)(Dialogs)"],"sourceRoot":""}